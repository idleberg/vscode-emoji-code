name: 'Run tests on NodeJS'

on:
  push:
    branches:
    - main
    paths:
    - '.github/**'
    - 'resources/**'
    - 'src/**'
    - 'types/**'
    - 'package.json'
    - 'pnpm-lock.yaml'
  pull_request:
    branches:
    - main
    paths:
      - '.github/**'
      - 'resources/**'
      - 'src/**'
      - 'types/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
  workflow_dispatch:

jobs:
  default:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: ['lts/*', '*']

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        fetch-depth: 10

    - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
      with:
        node-version: ${{ matrix.node-version }}

    # - name: Enable Corepack
    #   run: corepack enable

    - name: Install Packages Dependencies
      uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.0.1
      with:
        version: 9
        run_install: |
          - recursive: true
            args: [--frozen-lockfile, --strict-peer-dependencies]

    - name: Get pnpm store directory
      id: pnpm-cache
      run: |
        echo "::set-output name=pnpm_store_path::$(pnpm store path)"

    - uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_store_path }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: |
        pnpm install --frozen-lockfile --strict-peer-dependencies

    - name: Lint Source
      run: pnpm run --if-present lint

    - name: Build Source
      run: pnpm run --if-present build:lib

    - name: Run Tests
      run: pnpm run --if-present test
